workflow:
  rules:
  - if: $CI_COMMIT_BRANCH

image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest

variables:
  TF_ROOT: ${CI_PROJECT_DIR}
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_PROJECT_NAME}

cache:
  key: production
  paths:
    - ${TF_ROOT}/.terraform
    - ${TF_ROOT}/.terraform.lock.hcl

before_script:
  - cd ${TF_ROOT}

stages:
  - init
  - validate
  - build
  - deploy


init:
  stage: init
  script:
    - gitlab-terraform init

validate:
  stage: validate
  script:
    - gitlab-terraform validate

plan:
  stage: build
  script:
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json

apply:
  stage: deploy
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
      when: manual
  script:
    - apk update
    - apk add ansible
    - gitlab-terraform apply
  dependencies:
    - plan
  environment:
    name: production
    on_stop: desctroy

desctroy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
      when: manual
  script:
    - gitlab-terraform destroy
  environment:
    name: production
    action: stop
  